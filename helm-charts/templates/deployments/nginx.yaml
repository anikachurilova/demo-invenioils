---
{{- if .Capabilities.APIVersions.Has "apps.openshift.io/v1/DeploymentConfig" }}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: react-nginx
spec:
  replicas: 1
  {{- if not (.Capabilities.APIVersions.Has "apps.openshift.io/v1/DeploymentConfig") }}
  selector:
    matchLabels:
      app: react-nginx
  {{- end }}
  template:
    metadata:
      labels:
        app: react-nginx
    spec:
      containers:
        - name: react-nginx
          image: {{ .Values.nginx.image }}
          env:
            - name: TZ
              value: "Europe/Zurich"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: site-conf
              mountPath: /etc/nginx/conf.d
            - name: var-run
              mountPath: /var/run
            - name: var-cache-nginx
              mountPath: /var/cache/nginx
            - name: var-log-nginx
              mountPath: /var/log/nginx
          resources:
            requests:
              memory: 25Mi
              cpu: 0.05
            limits:
              memory: 100Mi
              cpu: 0.2
          readinessProbe:
            httpGet:
              path: /readiness-ping
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: site-conf
          configMap:
            name: nginx-config
            items:
              - key: site.conf
                path: site.conf
        - name: var-run
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: var-log-nginx
          emptyDir: {}